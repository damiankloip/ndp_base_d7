<?php

/**
 * @file
 * NDP base core profile install file.
 */

/**
 * Implements hook_install().
 */
function ndp_base_defaults_install() {
  // Save core variables.
  ndp_base_defaults_save_variables(_ndp_base_defaults_variable_map());
  // Save general contrib variables.
  ndp_base_defaults_save_variables(_ndp_base_defaults_contrib_variable_map());

  // Install a custom Backup migrate profile.
  ndp_base_defaults_bam_profile_install();

  // Save default WYSIWYG profiles.
  ndp_base_defaults_wysiwyg_ckeditor_profiles();
}

/**
 * Adds a row into the backup_migrate_profiles database table.
 */
function ndp_base_defaults_bam_profile_install() {
  // Add modified settings for default bam profile into db.
  $record = (object) array(
    'profile_id' => 'default',
    'name' => 'Default settings',
    'filename' => '[site:name]',
    'append_timestamp' => 1,
    'timestamp_format' => 'Y-m-d\TH-i-s',
    'filters' => _ndp_base_defaults_default_bam_filter_settings(),
  );

  $save = drupal_write_record('backup_migrate_profiles', $record);

  if ($save) {
    watchdog('ndp_base_defaults', t('Backup migrate default profile saved'));
  }
}

/**
 * Saves an array of key/values to the variables table.
 *
 * @param array $map
 *   An array of variables to save to the variables table. In the format
 *   key => value.
 */
function ndp_base_defaults_save_variables(array $map = array()) {
  foreach ($map as $key => $value) {
    variable_set($key, $value);
  }
}

/**
 * Returns an array mapping of variables to variable_set().
 *
 * This array is in the format of variable key => value.
 *
 * @return array
 */
function _ndp_base_defaults_variable_map() {
  return array (
    // Clean URL's.
    'clean_url' => '1',
    // Date.
    'date_default_timezone' => 'Europe/London',
    'date_first_day' => '1',
    'site_default_country' => 'GB',
    'date_format_long' => 'l, jS F Y',
    'date_format_medium' => 'jS F Y',
    'date_format_short' => 'd/m/Y',
    // Comment.
    'comment_anonymous_page' => 0,
    'comment_default_mode_page' => 1,
    'comment_default_per_page_page' => '50',
    'comment_form_location_page' => 1,
    'comment_page' => COMMENT_NODE_HIDDEN,
    'comment_preview_page' => '1',
    'comment_subject_field_page' => 1,
    // Menu.
    'menu_options_page' => array (
      0 => 'main-menu',
    ),
    'menu_parent_page' => 'main-menu:0',
    // Node.
    // Default "Page" to not be promoted and have comments disabled.
    'node_options_page' => array('status'),
    'node_preview_page' => '1',
    // Don't display date and author information for "Page" nodes by default.
    'node_submitted_page' => FALSE,
    'node_admin_theme' => TRUE,
    // File.
    'file_default_scheme' => 'public',
    'file_private_path' => 'sites/default/files/private',
    'file_public_path' => 'sites/default/files',
    'file_temporary_path' => '/tmp',
    // User.
    // Enable user picture support and set the default to a square thumbnail option.
    'user_pictures' => TRUE,
    'user_picture_dimensions' => '1024x1024',
    'user_picture_file_size' => '800',
    'user_picture_style' => 'thumbnail',
    // Allow visitor account creation with administrative approval.
    'user_register' => USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL,
  );
}

/**
 * Returns an array of general contrib module variables to set.
 *
 * @return array
 */
function _ndp_base_defaults_contrib_variable_map() {
  return array (
    // Admin menu.
    'admin_menu_devel_modules_skip' => array (
      'devel' => 0,
      'devel_node_access' => 0,
      'rules_admin' => 0,
      'views_ui' => 0,
    ),
    'admin_menu_margin_top' => 1,
    'admin_menu_position_fixed' => 0,
    'admin_menu_tweak_modules' => 1,
    'admin_menu_tweak_permissions' => 0,
    'admin_menu_tweak_tabs' => 0,
    // Honeypot.
    'honeypot_element_name' => 'homepage',
    'honeypot_form_comment_node_page_form' => 1,
    'honeypot_form_comment_node_webform_form' => 1,
    'honeypot_form_page_node_form' => 1,
    'honeypot_form_user_register_form' => 1,
    'honeypot_form_webforms' => 1,
    'honeypot_form_webform_node_form' => 1,
    'honeypot_log' => 1,
    'honeypot_protect_all_forms' => 0,
    'honeypot_time_limit' => '5',
    // IMCE.
    'imce_custom_content' => array (
      'imce_mkdir_content' => 1,
    ),
    'imce_custom_process' => array (
      'imce_mkdir_process_profile' => 1,
    ),
    'imce_profiles' => array (
      1 => array (
        'name' => 'Administrator',
        'usertab' => 1,
        'filesize' => '0',
        'quota' => '0',
        'tuquota' => '0',
        'extensions' => '*',
        'dimensions' => '980x980',
        'filenum' => '0',
        'directories' => array (
          0 => array (
            'name' => 'images',
            'subnav' => 1,
            'browse' => 1,
            'upload' => 1,
            'thumb' => 1,
            'delete' => 1,
            'resize' => 1,
            'mkdir' => 1,
            'rmdir' => 1,
          ),
        ),
        'thumbnails' => array (
          0 => array (
            'name' => 'Small',
            'dimensions' => '60x60',
            'prefix' => 'small_',
            'suffix' => '',
          ),
          1 => array (
            'name' => 'Medium',
            'dimensions' => '100x100',
            'prefix' => 'medium_',
            'suffix' => '',
          ),
          2 => array (
            'name' => 'Large',
            'dimensions' => '220x220',
            'prefix' => 'large_',
            'suffix' => '',
          ),
          3 => array (
            'name' => 'XLarge',
            'dimensions' => '300x300',
            'prefix' => 'xlarge_',
            'suffix' => '',
          ),
        ),
        'mkdirnum' => 0,
      ),
      2 => array (
        'name' => 'Sample profile',
        'usertab' => 1,
        'filesize' => 1,
        'quota' => 2,
        'tuquota' => 0,
        'extensions' => 'gif png jpg jpeg',
        'dimensions' => '800x600',
        'filenum' => 1,
        'directories' => array (
          0 => array (
            'name' => 'u%uid',
            'subnav' => 0,
            'browse' => 1,
            'upload' => 1,
            'thumb' => 1,
            'delete' => 0,
            'resize' => 0,
            'mkdir' => 0,
            'rmdir' => 0,
          ),
        ),
        'thumbnails' => array (
          0 => array (
            'name' => 'Thumb',
            'dimensions' => '90x90',
            'prefix' => 'thumb_',
            'suffix' => '',
          ),
        ),
        'mkdirnum' => 2,
      ),
    ),
    'imce_roles_profiles' => array (
      3 => array (
        'public_pid' => '1',
        'private_pid' => 0,
      ),
      2 => array (
        'public_pid' => 0,
        'private_pid' => 0,
      ),
      1 => array (
        'public_pid' => 0,
        'private_pid' => 0,
      ),
    ),
    'imce_settings_absurls' => 0,
    'imce_settings_disable_private' => 1,
    'imce_settings_replace' => '0',
    'imce_settings_textarea' => '',
    'imce_settings_thumb_method' => 'scale_and_crop',
  );
}

/**
 * Returns an array of DAM profile settings.
 * TODO: make bam ctools exportable?
 */
function _ndp_base_defaults_default_bam_filter_settings() {
  return array (
    'compression' => 'gzip',
    'notify_success_enable' => 0,
    'notify_success_email' => 'admin@example.com',
    'notify_failure_enable' => 0,
    'notify_failure_email' => 'admin@example.com',
    'utils_site_offline' => 0,
    'utils_site_offline_message' => 'Tuesday is currently under maintenance. We should be back shortly. Thank you for your patience.',
    'destinations' => array (
      'db' => array (
        'exclude_tables' => array (),
        'nodata_tables' => array (
          'cache' => 'cache',
          'cache_block' => 'cache_block',
          'cache_bootstrap' => 'cache_bootstrap',
          'cache_field' => 'cache_field',
          'cache_filter' => 'cache_filter',
          'cache_form' => 'cache_form',
          'cache_image' => 'cache_image',
          'cache_menu' => 'cache_menu',
          'cache_page' => 'cache_page',
          'cache_path' => 'cache_path',
          'cache_update' => 'cache_update',
          'cache_views' => 'cache_views',
          'cache_views_data' => 'cache_views_data',
          'search_dataset' => 'search_dataset',
          'search_index' => 'search_index',
          'search_total' => 'search_total',
          'sessions' => 'sessions',
          'watchdog' => 'watchdog',
        ),
        'utils_lock_tables' => 0,
      ),
    ),
  );
}

/**
 * Saves default WYSIWYG profiles to the database.
 *
 * This is here so we can lose the features dependency. Would be nice if WYSIWYG
 * could support CTools exportables instead.
 */
function ndp_base_defaults_wysiwyg_ckeditor_profiles() {
  $profiles = array();

  // Exported profile: filtered_html
  $profiles['filtered_html'] = array(
    'format' => 'filtered_html',
    'editor' => 'ckeditor',
    'settings' => array(
      'default' => 1,
      'user_choose' => 0,
      'show_toggle' => 1,
      'theme' => 'advanced',
      'language' => 'en',
      'buttons' => array(
        'default' => array(
          'Bold' => 1,
          'Italic' => 1,
          'Underline' => 1,
          'JustifyCenter' => 1,
          'BulletedList' => 1,
          'NumberedList' => 1,
          'Outdent' => 1,
          'Indent' => 1,
        ),
        'linkit' => array(
          'linkit' => 1,
        ),
      ),
      'toolbar_loc' => 'top',
      'toolbar_align' => 'left',
      'path_loc' => 'bottom',
      'resizing' => 1,
      'verify_html' => 1,
      'preformatted' => 0,
      'convert_fonts_to_spans' => 1,
      'remove_linebreaks' => 1,
      'apply_source_formatting' => 0,
      'paste_auto_cleanup_on_paste' => 1,
      'block_formats' => 'p,h2,h3,h4,h5,h6,div',
      'css_setting' => 'self',
      'css_path' => '%t/css/editor.css',
      'css_classes' => '',
    ),
    'rdf_mapping' => array(),
  );

  // Exported profile: full_html
  $profiles['full_html'] = array(
    'format' => 'full_html',
    'editor' => 'ckeditor',
    'settings' => array(
      'default' => 1,
      'user_choose' => 0,
      'show_toggle' => 1,
      'theme' => 'advanced',
      'language' => 'en',
      'buttons' => array(
        'default' => array(
          'Bold' => 1,
          'Italic' => 1,
          'Underline' => 1,
          'JustifyCenter' => 1,
          'BulletedList' => 1,
          'NumberedList' => 1,
          'Outdent' => 1,
          'Indent' => 1,
          'Link' => 1,
          'Unlink' => 1,
          'Anchor' => 1,
          'Image' => 1,
          'Superscript' => 1,
          'Blockquote' => 1,
          'Source' => 1,
          'HorizontalRule' => 1,
          'PasteFromWord' => 1,
          'ShowBlocks' => 1,
          'RemoveFormat' => 1,
          'SpecialChar' => 1,
          'Format' => 1,
          'Styles' => 1,
          'CreateDiv' => 1,
          'Iframe' => 1,
          'SpellChecker' => 1,
          'Scayt' => 1,
        ),
        'imce' => array(
          'imce' => 1,
        ),
        'linkit' => array(
          'linkit' => 1,
        ),
      ),
      'toolbar_loc' => 'top',
      'toolbar_align' => 'left',
      'path_loc' => 'bottom',
      'resizing' => 1,
      'verify_html' => 0,
      'preformatted' => 0,
      'convert_fonts_to_spans' => 1,
      'remove_linebreaks' => 0,
      'apply_source_formatting' => 0,
      'paste_auto_cleanup_on_paste' => 0,
      'block_formats' => 'p,h2,h3,h4,h5,h6,div,pre',
      'css_setting' => 'self',
      'css_path' => '%t/css/editor.css',
      'css_classes' => '',
    ),
    'rdf_mapping' => array(),
  );

  // Save the profiles.
  foreach ($profiles as $profile) {
    $record = (object) $profile;
    $save = drupal_write_record('wysiwyg', $record);
    // Log an entry in the watchdog if they have been saved.
    if ($save) {
      watchdog('ndp_base_defaults', t('WYSIWYG profile saved for @format format',
        array('@format' => $record->format)));
    }
  }
}
